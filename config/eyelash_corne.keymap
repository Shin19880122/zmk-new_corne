#define ZMK_POINTING_DEFAULT_MOVE_VAL 1200  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 25   // 10

#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/backlight.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>
#include <dt-bindings/zmk/rgb.h>

&mmv_input_listener { input-processors = <&zip_xy_scaler 2 1>; };

&msc_input_listener { input-processors = <&zip_scroll_scaler 2 1>; };

&msc {
    acceleration-exponent = <1>;      // 0
    time-to-max-speed-ms = <100>;       // 300
    delay-ms = <0>;                   // 0
};

&mmv {
    time-to-max-speed-ms = <500>;
    acceleration-exponent = <1>;
    trigger-period-ms = <16>;
};

/ {
    behaviors {
        td0: td0 {
            compatible = "zmk,behavior-tap-dance";
            display-name = "Shift/Caps Lock Tap Dance";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&kp CAPS>;
        };
    };

    rgb_encoder: rgb_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
    };

    scroll_encoder: scroll_encoder {
        compatible = "zmk,behavior-sensor-rotate";
        #sensor-binding-cells = <0>;
        bindings = <&msc SCRL_DOWN>, <&msc SCRL_UP>;

        tap-ms = <100>;
    };

    combos {
        compatible = "zmk,combos";

        spacecombo {
            bindings = <&kp SPACE>;
            key-positions = <14 15>;
        };

        Nshortcut {
            bindings = <&kp N>;
            key-positions = <18 16>;
        };

        RightClick {
            bindings = <&mkp RCLK>;
            key-positions = <23 24>;
        };

        UPscroll {
            bindings = <&msc SCRL_UP>;
            key-positions = <22 23>;
        };

        Downscroll {
            bindings = <&msc SCRL_DOWN>;
            key-positions = <36 37>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "QWERTY";
            bindings = <
&kp TAB         &kp Q  &kp W  &kp E         &kp R  &kp T                                &kp UP                &kp Y         &kp U  &kp I          &kp O    &kp P      &kp BSPC
&kp LEFT_SHIFT  &kp A  &kp S  &kp D         &kp F  &kp G                      &kp LEFT  &kp ENTER  &kp RIGHT  &kp H         &kp J  &kp K          &kp L    &kp COLON  &kp ENTER
&kp LCTRL       &kp Z  &kp X  &kp C         &kp V  &kp B        &kp C_MUTE              &kp DOWN              &kp N         &kp M  &kp COMMA      &kp DOT  &kp FSLH   &kp GRAVE
                              &kp LEFT_ALT  &mo 1  &lt 3 SPACE                                                &lt 3 LG(N1)  &mo 2  &kp LC(SPACE)
            >;

            sensor-bindings = <&inc_dec_kp C_VOLUME_UP C_VOLUME_DOWN>;
        };

        lower_layer {
            display-name = "NUMBER";
            bindings = <
&kp ESCAPE      &kp EXCLAMATION  &kp AT_SIGN  &kp HASH   &kp F2     &kp F1                                        &mmv MOVE_UP                     &kp N7         &kp N8        &kp N9        &kp LBKT        &kp MINUS       &kp BSPC
&kp LEFT_SHIFT  &kp SPACE        &trans       &mkp RCLK  &mkp LCLK  &msc SCRL_UP                  &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &kp NUMBER_4   &kp N5        &kp NUMBER_6  &kp COLON       &kp UP_ARROW    &kp UNDER
&kp LCTRL       &kp LEFT_WIN     &kp LG(D)    &mkp RCLK  &mkp LCLK  &msc SCRL_DOWN  &kp C_MUTE                    &mmv MOVE_DOWN                   &kp NUMBER_1   &kp NUMBER_2  &kp NUMBER_3  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT
                                              &trans     &trans     &kp SPACE                                                                      &kp RIGHT_ALT  &kp N0        &kp PERIOD
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        raise_layer {
            display-name = "SYMBOL";
            bindings = <
&kp CAPSLOCK     &kp EXCL       &kp QUESTION  &kp HASH   &kp DLLR   &kp PRCNT                            &mmv MOVE_UP                     &kp EQUAL             &kp AMPS               &kp MINUS     &kp AT_SIGN  &kp DEL       &kp BSPC
&kp LEFT_SHIFT   &kp RA(GRAVE)  &mkp LCLK     &mkp MCLK  &mkp RCLK  &mkp MB4             &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp LBKT      &kp RBKT     &kp BSLH      &kp PAGE_UP
&kp PRINTSCREEN  &trans         &trans        &none      &none      &mkp MB5   &trans                    &mmv MOVE_DOWN                   &kp PLUS              &kp MINUS              &kp LBRC      &kp RBRC     &kp QUESTION  &kp PAGE_DOWN
                                              &trans     &trans     &kp SPACE                                                             &kp RET               &trans                 &kp ASTERISK
            >;

            sensor-bindings = <&scroll_encoder>;
        };

        layer_3 {
            display-name = "Fn";
            bindings = <
&kp F1          &kp F2           &kp F3      &kp F4      &kp F5     &kp F6                                    &mmv MOVE_UP                     &kp F7        &kp F8        &kp F9          &kp F10       &kp F11       &kp F12
&kp LEFT_SHIFT  &rgb_ug RGB_ON   &mkp LCLK   &mkp MCLK   &mkp RCLK  &bl BL_ON                 &mmv MOVE_LEFT  &mkp LCLK       &mmv MOVE_RIGHT  &kp F8        &kp F1        &kp F2          &kp TAB       &trans        &kp BACKSPACE
&kp LEFT_SHIFT  &rgb_ug RGB_OFF  &bl BL_INC  &bl BL_DEC  &trans     &bl BL_OFF  &kp C_MUTE                    &mmv MOVE_DOWN                   &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2    &bt BT_SEL 3  &bt BT_SEL 4  &trans
                                             &trans      &trans     &trans                                                                     &trans        &trans        &bt BT_CLR_ALL
            >;

            sensor-bindings = <&scroll_encoder>;
        };
    };
};
